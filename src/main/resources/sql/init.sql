CREATE TABLE nas."user" (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	username varchar NOT NULL,
	"password" varchar NOT NULL,
	created_at timestamp NOT NULL,
	last_modified_at timestamp NOT NULL,
	notes text NULL,
	CONSTRAINT user_pk PRIMARY KEY (id),
	CONSTRAINT user_unique UNIQUE (username)
);

CREATE TABLE nas."role" (
	id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" varchar NOT NULL,
	created_at timestamp NOT NULL,
	last_modified_at timestamp NOT NULL,
	CONSTRAINT role_pk PRIMARY KEY (id),
	CONSTRAINT role_unique UNIQUE ("name")
);

CREATE TABLE nas.user_role (
	user_id bigint NULL,
	role_id bigint NULL,
	CONSTRAINT user_role_pk PRIMARY KEY (user_id,role_id),
	CONSTRAINT user_role_user_fk FOREIGN KEY (user_id) REFERENCES nas."user"(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT user_role_role_fk FOREIGN KEY (role_id) REFERENCES nas."role"(id) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO nas."user" (username, "password", created_at, last_modified_at)
VALUES ('admin', '$2a$10$2TBMxdPuoGfaN3WZQFoDVuM5xi8egcV/4XzzJVa34onasVJjsseSm', now(), now())

INSERT INTO nas."user_role" (user_id, role_id)
VALUES (
    (SELECT id from nas."user" WHERE username = 'admin')
    (SELECT id from nas."role" WHERE name = 'USER')
)
(
    (SELECT id from nas."user" WHERE username = 'admin')
    (SELECT id from nas."role" WHERE name = 'ADMIN')
)

CREATE OR REPLACE FUNCTION add_user_role()
RETURNS TRIGGER AS $$
DECLARE
  role_id INTEGER;
BEGIN
  -- Retrieve the ID of the "USER" role.  Replace 'role_name' with the actual column name
  -- where the role name is stored in your 'roles' table.
  SELECT id INTO role_id FROM nas."role" WHERE name = 'USER';

  -- Check if the "USER" role exists.
  IF role_id IS NULL THEN
    RAISE EXCEPTION 'Role "USER" not found';
  END IF;

  -- Insert a new row into the user_role table.
  INSERT INTO nas."user_role" (user_id, role_id)
  VALUES (NEW.id, role_id);

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_add_user_role
AFTER INSERT ON nas."user"
FOR EACH ROW
EXECUTE FUNCTION add_user_role();
