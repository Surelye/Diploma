server:
  port: 8888
  servlet:
    context-path: /nas

api:
  cors:
    headers: Origin,Access-Control-Allow-Origin,Content-Type,Accept,Authorization,X-Requested-With,
      Access-Control-Request-Method,Access-Control-Request-Headers,Access-Control-Allow-Credentials
    methods: GET,POST,PUT,PATCH,DELETE,OPTIONS
    origin: ${FRONTEND_ORIGIN:http://localhost:5173}

spring:
#  profiles:
#    active: dev
  application:
    name: network-attached-storage

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_URI:localhost}:${DB_PORT:5432}/${DB_NAME:nas_database}?currentSchema=${DB_SCHEMA:nas}
    username: ${DB_USERNAME:username}
    password: ${DB_PASSWORD:password}

  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus, info
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: ${TRACING_SAMPLING_PROBABILITY:1.0}
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL:http://localhost:9411/api/v2/spans}

logging:
  logback:
    spring:
      lokiUrl: ${LOKI_LOGGING_ENDPOINT_URL:http://localhost:3100/loki/api/v1/push}
  level:
    sgu:
      borodin:
        nas: INFO
